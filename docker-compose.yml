version: '3'
services:
  mstdn-nginx:
    restart: always
    image: nginx:latest
    ports:
      - 9090:9090
    env_file: .env.production
    links:
      - web
      - streaming
    volumes:
      - ./settings/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./settings/nginx/conf:/etc/nginx/conf/:ro
      - ../nginx_proxy/certs/:/etc/nginx/certs/:ro
    networks:
      - front
      - back-mstdn

  db:
    restart: always
    image: postgres:9.6-alpine-custom
    networks:
      - back-mstdn
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:4.0-alpine
    networks:
      - back-mstdn
    volumes:
      - ./redis:/data
  web:
    build: .
    #image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      - back-mstdn
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
#      - es
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    build: .
    #image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: yarn start
    networks:
      - back-mstdn
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis

  sidekiq:
    build: .
    #image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q default -q push -q mailers
    depends_on:
      - db
      - redis
    networks:
      - back-mstdn
    volumes:
      - ./public/system:/mastodon/public/system

  sidekiq_2:
    build: .
    #image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -c 10 -q pull
    depends_on:
      - db
      - redis
    networks:
      - back-mstdn
    volumes:
      - ./public/system:/mastodon/public/system
networks:
  front:
    external: true
  back-mstdn:
